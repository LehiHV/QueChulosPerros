@page "/citas"
@using Syncfusion.Blazor.Schedule
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Calendars
@using QueChulosPerros.Shared.Model;
@using Syncfusion.Blazor.Buttons
@inject HttpClient http;

<div class="container-fluid">
    <div class="col-md-12">
        <SfSchedule TValue="Cita" @bind-SelectedDate="@CurrentDate">
            <ScheduleTemplates>
                <EditorTemplate>
                     <table class="custom-event-editor" width="100%" cellpadding="5">
                        <tbody>
                            <tr>
                                <td class="e-textlabel">Razón</td>
                                <td colspan="4">
                                    <SfTextBox @bind-Value="@((context as Cita).Subject)"></SfTextBox>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Cliente</td>
                                <td colspan="4">
                                    <SfDropDownList ID="ClientId" DataSource="@clientes" Placeholder="Escoge el cliente" @bind-Value="@((context as Cita).ClientId)">
                                        <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Desde</td>
                                <td colspan="4">
                                    <SfDateTimePicker @bind-Value="@((context as Cita).StartTime)"></SfDateTimePicker>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Hasta</td>
                                <td colspan="4">
                                    <SfDateTimePicker @bind-Value="@((context as Cita).EndTime)"></SfDateTimePicker>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Mascota</td>
                                <td colspan="4">
                                            <SfDropDownList ID="PetId" DataSource="@(mascotas.Where(m => m.ClientId == ((context as Cita).ClientId)).ToList())" Placeholder="Escoge la mascota" @bind-Value="@((context as Cita).PetId)">
                                        <DropDownListFieldSettings Text="Name" Value="Id"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div id="event-footer">
                        <div id="right-button">
                            <SfButton OnClick="HandleValidSubmit1">Guardar</SfButton>
                            @* <SfButton OnClick="Cancelar">Cancelar</SfButton> *@
                        </div>
                    </div>
                    @{
                        async Task HandleValidSubmit1()
                        {
                            nuevaCita=(context as Cita);
                            await http!.PostAsJsonAsync("/api/citas", nuevaCita);
                            nuevaCita = new Cita();
                        }
                    }
                </EditorTemplate>
            </ScheduleTemplates>
            <ScheduleEventSettings DataSource="@agendarCita"></ScheduleEventSettings>
            <ScheduleViews>
                <ScheduleView Option="View.Day" StartHour="8:00" EndHour="19:00"></ScheduleView>
                <ScheduleView Option="View.Week" StartHour="8:00" EndHour="19:00"></ScheduleView>
                <ScheduleView Option="View.WorkWeek" StartHour="8:00" EndHour="19:00"></ScheduleView>
                <ScheduleView Option="View.Month" StartHour="8:00" EndHour="19:00"></ScheduleView>
                <ScheduleView Option="View.Agenda" StartHour="8:00" EndHour="19:00"></ScheduleView>
            </ScheduleViews>
        </SfSchedule>
    </div>
</div>

@code {
    DateTime CurrentDate = DateTime.Today;
    private List<Cita>? agendarCita;
    private List<Mascota>? mascotas;
    private List<Cliente>? clientes;
    private Cita nuevaCita = new Cita();


    protected override async Task OnInitializedAsync()
    {
        agendarCita = await http!.GetFromJsonAsync<List<Cita>>("api/citas");
        clientes = await http.GetFromJsonAsync<List<Cliente>>("api/Clientes");
        mascotas = await http.GetFromJsonAsync<List<Mascota>>("api/Mascotas");
    }
    private async Task HandleValidSubmit()
    {
        await http!.PostAsJsonAsync("/api/citas", nuevaCita);
        nuevaCita = new Cita();
    }

    private async Task Cancelar()
    {
        nuevaCita = new Cita();
    }
 
}

